<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title><%= title %></title>

  <!-- Bootstrap CSS -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"/>
  <!-- Bootstrap Icons -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.js"></script>

  <!-- Your custom styles -->
  <link rel="stylesheet" href="/css/styles.css">
</head>
<body>
  <!-- Time & Date (Mirror Layout) -->
  <h1 class="display-3">19:24</h1>
  <h5 class="text-light">Monday, March 3</h5>

  <!-- Filter Buttons -->
  <div class="profile-switcher my-3">
    <!-- Outline each button with the color of the plan type -->
    <button class="filter-btn filter-work" onclick="filterContent('work')">Work</button>
    <button class="filter-btn filter-school" onclick="filterContent('school')">School</button>
    <button class="filter-btn filter-personal" onclick="filterContent('personal')">Personal</button>
    <button class="filter-btn filter-all" onclick="filterContent('all')">All</button>
    
  </div>

  <!-- Dashboard Sections -->
  <div class="dashboard">
    <!-- Tasks Partial -->
    <%- include("partials/tasks", {
          tasks: tasks
        
        }) %>
      
    <!-- Schedule Partial -->
    <%- include("partials/schedule", {
          calendars: calendars,
          calendarEvents: calendarEvents
        }) %>
  </div>
  <script>
    // Hides elements by adding the 'hidden' class.
    // (Ensure your CSS includes: .hidden { display: none !important; })
  
    function filterContent(filterValue, dimension = 'plan') {
      // Filter tasks
      document.querySelectorAll('.task-section').forEach(task => {
        if (dimension === 'plan') {
          const taskType = task.getAttribute('data-task-type');
          if (filterValue === 'all' || taskType === filterValue) {
            task.classList.remove('hidden');
          } else {
            task.classList.add('hidden');
          }
        } else if (dimension === 'bucket') {
          const bucket = task.getAttribute('data-bucket');
          if (filterValue === 'all' || bucket === filterValue) {
            task.classList.remove('hidden');
          } else {
            task.classList.add('hidden');
          }
        }
      });
  
      // Filter schedule events by calendar type (always plan-based)
      document.querySelectorAll('.schedule-event').forEach(eventElem => {
        const calendarType = eventElem.getAttribute('data-calendar-type');
        if (filterValue === 'all' || calendarType === filterValue) {
          eventElem.classList.remove('hidden');
        } else {
          eventElem.classList.add('hidden');
        }
      });
  
      // Hide schedule day groups if none of their events are visible
      document.querySelectorAll('.schedule-day-group').forEach(group => {
        const events = group.querySelectorAll('.schedule-event');
        let anyVisible = false;
        events.forEach(eventElem => {
          if (!eventElem.classList.contains('hidden')) {
            anyVisible = true;
          }
        });
        if (anyVisible) {
          group.classList.remove('hidden');
        } else {
          group.classList.add('hidden');
        }
      });
  
      // After filtering, update bucket filter buttons based on visible tasks
      updateBucketFilterButtons();
    }
  
    // This function collects only visible tasks (without the hidden class)
    // and then hides bucket filter buttons that do not have any visible tasks.
    function updateBucketFilterButtons() {
      const availableBuckets = new Set();
      document.querySelectorAll('.task-section').forEach(task => {
        if (!task.classList.contains('hidden')) {
          const bucket = task.getAttribute('data-bucket');
          availableBuckets.add(bucket);
        }
      });
  
      document.querySelectorAll('.bucket-filter-button').forEach(btn => {
        const bucketFilterValue = btn.getAttribute('data-bucket');
        // Always show the "all" button.
        if (bucketFilterValue !== 'all' && !availableBuckets.has(bucketFilterValue)) {
          btn.classList.add('hidden');
        } else {
          btn.classList.remove('hidden');
        }
      });
    }
  
    // Optionally, call updateBucketFilterButtons on initial load.
    document.addEventListener('DOMContentLoaded', updateBucketFilterButtons);
  </script>
  
  
  


  <!-- <script src="/js/whiteboard.js"></script> -->
  <!-- <script src="/js/tasks.js"></script> -->
  <!-- <script src="/js/schedule.js"></script> -->

  <!-- Bootstrap JS -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
